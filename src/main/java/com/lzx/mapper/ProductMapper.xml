<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzx.mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="com.lzx.entity.Product">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="cate_id" jdbcType="INTEGER" property="cate_id" />
    <result column="thumbnail" jdbcType="VARCHAR" property="thumbnail" />
    <result column="inventory" jdbcType="INTEGER" property="inventory" />
    <result column="sales_volume" jdbcType="INTEGER" property="sales_volume" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="sale_price" jdbcType="DECIMAL" property="sale_price" />
    <result column="selling_description" jdbcType="VARCHAR" property="selling_description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="sale_time" jdbcType="TIMESTAMP" property="sale_time" />
    <result column="detail_description" jdbcType="LONGVARCHAR" property="detail_description" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lzx.entity.Product">
    insert into product (id, name, cate_id, 
      thumbnail, inventory, sales_volume, 
      price, sale_price, selling_description, 
      create_time, sale_time, detail_description
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{cate_id,jdbcType=INTEGER}, 
      #{thumbnail,jdbcType=VARCHAR}, #{inventory,jdbcType=INTEGER}, #{sales_volume,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{sale_price,jdbcType=DECIMAL}, #{selling_description,jdbcType=VARCHAR}, 
      #{create_time,jdbcType=TIMESTAMP}, #{sale_time,jdbcType=TIMESTAMP}, #{detail_description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.lzx.entity.Product">
    update product
    set name = #{name,jdbcType=VARCHAR},
      cate_id = #{cate_id,jdbcType=INTEGER},
      thumbnail = #{thumbnail,jdbcType=VARCHAR},
      inventory = #{inventory,jdbcType=INTEGER},
      sales_volume = #{sales_volume,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      sale_price = #{sale_price,jdbcType=DECIMAL},
      selling_description = #{selling_description,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      sale_time = #{sale_time,jdbcType=TIMESTAMP},
      detail_description = #{detail_description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, cate_id, thumbnail, inventory, sales_volume, price, sale_price, 
    selling_description, create_time, sale_time, detail_description
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, cate_id, thumbnail, inventory, sales_volume, price, sale_price, 
    selling_description, create_time, sale_time, detail_description
    from product
  </select>
  <select id="selectByCateId" resultMap="BaseResultMap">
    select id, name, cate_id, thumbnail, inventory, sales_volume, price, sale_price, 
    selling_description, create_time, sale_time, detail_description
    from product where cate_id in 
    <foreach collection="array" item="item" open="(" separator="," close=")">
    	#{item}
    </foreach>
    order by sales_volume DESC
  </select>
  <select id="selectPopular" resultMap="BaseResultMap">
  	select id, name, cate_id, thumbnail, inventory, sales_volume, price, sale_price, 
    selling_description, create_time, sale_time, detail_description
    from product ORDER BY sales_volume DESC
  </select>
  <select id="selectForSearch" resultMap="BaseResultMap">
  	select id, name, cate_id, thumbnail, inventory, sales_volume, price, sale_price, 
    selling_description, create_time, sale_time, detail_description
    from product WHERE name LIKE "%"#{word}"%" ORDER BY sales_volume DESC
  </select>
</mapper>